OWASP 


1. What is OWASP and what is its primary
mission as described in the article?

-- OWASP är ett online community som forskar i data säkerhet på webben
och tillhandahåller dokument om hur man kan hålla sig säker från diverse attacker eller buggar
och minimera riskerna för det så mycket som möjligt.  


2. Explain the concept of "Injection". 
Provide an example of how an injection attack could compromise a web application's security.

-- Injection är när det t.ex finns ett formulär/textruta på en webbsida, och så kan användaren
skriva in en typ av kod, t.ex. SQL kod, i fältet som då tas emot av programmet, och kan
börja köras, för att komma åt databasen. 


3. Explain two strategies to prevent Broken Authentication vulnerabilities.

-- Två olika sätt att förhindra Broken Authentication på är två-stegs autentisering
och satsbegränsning. Två stegs autentisering innebär att användaren måste bevisa
sin identitet genom två olika verifieringar innan man kan få tillgång till viss
information. Man ska kunna visa att man är den som man påstår sig för att vara.
T.ex när man loggar in på sin Gmail eller Facebook. 
    Satsbegränsning innebär att man begränsar eller dröjer ut repeterande inloggning 
på ett visst konto. Som skyddar inloggningar. T.ex om man har provat ett lösenord 
ett visst antal gånger så kan man få behöva vänta några minuter innan man får försöka
igen. 


4. Describe the potential consequences of Insecure Deserialization in web applications. 
How can developers protect against such attacks?

-- Konsekvenserna som blir är att koden kan ha blivit ändrad på vägen fram 
till sitt mål, där den skulle behöva användas igen, men nu har blivit justerad.
Koden packas vanligtvis och skickas vidare. Men det som händer vid sådana här attacker
är att den blir öppnad och justerad innan den kommer fram. Man får attack på sin kod,
så kallade DDoS attacks. DDoS attacker stör den vanliga trafiken till olika servrar 
och nätveck. För att undvika detta förbjuder man nedbrtning/ändring av datafrån opålitliga källor. 


5. Briefly define Cross-Site Scripting (XSS) as outlined in the article and 
list two methods suggested in the article to prevent XSS attacks in web applications.

-- Cross-site scripting är en sårbarhet där angriparen lägger in kod till en legitim
webbsida som kommer att köras när "offret"/användaren laddar sidan. Oftast är koden tillagd i slutet av 
url:en eller direkt tillagd på sidan som visar användarens innehåll. Två sätt att
förhindra detta angripet på är att förbjuda användare att skriva in kod i formulär inputs. 
Och det andra sättet är att validera regler som förhindrar användaren från att posta viss data i formuläret som
inte möter vissa kriterier. T.ex. om man ska skriva in sittefternamn i ett fält så kan man ha 
valideringsregler om att att användaren bara får skriva in bokstäver. Då kommer andra tecken inte godkännas och 
därmed inte tas emot. 

